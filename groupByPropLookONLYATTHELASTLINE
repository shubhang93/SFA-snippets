var arr = [{id:1, name: "X"}, {id:1,name:"Z"}, {id:1, name:"Y"}, {id:2, name: "EE"}]
arr.reduce((ax, curr)=> Object.assign({}, ax, {[curr.id]: {curr}}))
arr.reduce((ax, curr)=> Object.assign({}, ax, {[curr.id]: curr}))
arr.reduce((ax, curr)=> Object.assign({}, ax, {[curr.id]: curr}),{})
arr.reduce((ax, curr)=> Object.assign({}, ax, {[curr.id]: [].concat(curr)}),{})
arr.reduce((ax, curr,a)=> Object.assign({}, ax, {[curr.id]: [].concat(a.filter(o)=>o.id === curr.id)}),{})
arr.reduce((ax, curr,a)=> Object.assign({}, ax, {[curr.id]: [].concat(a.filter(o)=>o.id === curr.id)}),{})
arr.reduce((ax, curr,a)=> Object.assign({}, ax, {[curr.id]: [].concat(a.filter(o)=>o.id === curr.id)}),{})
arr.reduce((ax, curr,a)=> Object.assign({}, ax, {[curr.id]: [].concat(a.filter(o)=>o.id === curr.id)}),{})
arr.reduce((ax, curr,idx,a)=> Object.assign({}, ax, {[curr.id]: [].concat(a.filter(o)=>o.id === curr.id)}),{})
arr.reduce((ax, curr,idx,a)=> Object.assign({}, ax, {[curr.id]: [].concat(a.filter(o)=>o.id === curr.id)}),{})
arr.reduce((ax, curr,a)=> Object.assign({}, ax, {[curr.id]: [].concat(a.filter(o)=>o.id === curr.id)}),{})
arr.reduce((ax, curr,a)=> Object.assign({}, ax, {[curr.id]: [].concat(),{})
arr.reduce((ax, curr,a)=> Object.assign({}, ax, {[curr.id]: [].concat()},{})
arr.reduce((ax, curr,a)=> Object.assign({}, ax, {[curr.id]: [].concat()}),{})
arr.reduce((ax, curr,i,a)=> Object.assign({}, ax, {[curr.id]: [].concat(a.filter(o)=>o.id === curr.id)}),{})
arr.reduce((ax, curr,i,a) => Object.assign({},ax, {[curr.id]: a})
arr.reduce((ax, curr,i,a) => Object.assign({},ax, {[curr.id]: 1})
arr.reduce((ax, curr,i,a) => Object.assign({},ax, {[curr.id]: 1}))
arr.reduce((ax, curr,i,a) => Object.assign({},ax, {[curr.id]: 1}),{})
arr.reduce((ax, curr,i,a) => Object.assign({},ax, {[curr.id]: a}),{})
arr.reduce((ax, curr,i,a) => Object.assign({},ax, {[curr.id]: a.filter(o)=>o.id === curr.id}),{})
arr.reduce((ax, curr,i,a) => Object.assign({},ax, {[curr.id]: (a.filter(o)=>o.id === curr.id)}),{})
arr.reduce((ax, curr,i,a) => Object.assign({},ax, {[curr.id]: 1}),{})
arr.reduce((ax, curr,i,a) => Object.assign({},ax, {[curr.id]: []}),{})
arr.reduce((ax, curr,i,a) => Object.assign({},ax, {[curr.id]: a}),{})
arr.reduce((ax, curr,i,a) => Object.assign({},ax, {[curr.id]: a.map(e=>e)}),{})
arr.reduce((ax, curr,i,a) => Object.assign({},ax, {[curr.id]: a.filter(e=>e.id === 1)}),{})
arr.reduce((ax, curr,i,a) => Object.assign({},ax, {[curr.id]: a.filter(e=>e.id === curr.id)}),{})
